node {
   def M2_HOME="/usr/share/maven"
   stage('getscm') { // for display purposes
      // Get some code from a GitHub repository
      git 'https://github.com/Devops6060/spring3-mvc-maven-xml-hello-world.git'
      // Get the Maven tool.
   }
   stage('SonarQube analysis') {
    def scannerHome = tool 'sonar';
    withSonarQubeEnv('My SonarQube Server') { // If you have configured more than one global server connection, you can specify its name
      sh "${scannerHome}/bin/sonar-scanner"
    }
  }
   stage('Build') {
      // Run the maven build
      if (isUnix()) {
         sh "${M2_HOME}/bin/mvn -Dmaven.test.failure.ignore clean package"
      } else {
      echo 'this is build maven artifact'
         bat(/"${mvnHome}\bin\mvn" -Dmaven.test.failure.ignore clean package/)
      }
   }
    stage('artifact') {
      
      archive 'target/*.war'
   }
   stage ('deploy'){
   echo 'deployment started'
       sh "curl -v -u admin:admin -T '/var/lib/jenkins/jobs/Pipeline-Test/builds/18/archive/target/spring3-mvc-maven-xml-hello-world-1.0-SNAPSHOT.war' 'http://18.220.105.79:8081/manager/html'"
  }
}
